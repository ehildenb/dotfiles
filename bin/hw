#!/usr/bin/env zsh

# system-stats
# ------------

hw_bat() {
    bat=($(acpi -b))
    bat_state="${bat[3]:0:1}"
    bat_percent="${bat[4]%,}"
    bat_time="${bat[5]}"
    case "$bat_state" in
        F) echo "$bat_state"'-'"$bat_percent"           ;;
        *) echo "$bat_state"'-'"$bat_percent $bat_time" ;;
    esac
}

hw_temp() {
    local temps_dir curr_temp sum_temp avg_temp num_temp max_temp temp_str
    max_temp='0'
    num_temp='0'
    sum_temp='0'
    temp_str=''
    for curr_temp in $(sensors | grep 'Â°C' | cut --delimiter '+' --field 2 | cut --delimiter 'C' --field 1 | cut --delimiter '.' --field 1); do
        [[ "$curr_temp" != '0' ]] || continue
        [[ "$curr_temp" -gt '1000' ]] && curr_temp=$((curr_temp / 1000))
        [[ "$curr_temp" -gt "$max_temp" ]] && max_temp="$curr_temp"
        sum_temp=$((sum_temp + curr_temp))
        num_temp=$((num_temp + 1))
        temp_str="$temp_str $curr_temp"
    done
    avg_temp="$(echo "scale=1 ; $sum_temp / $num_temp ;" | bc)"
    temp_str="max: $max_temp avg: $avg_temp"
    echo "$temp_str"
}

# suspend/hibernate
# -----------------

hw_mem() {
    lid_file='/proc/acpi/button/lid/LID0/state'
    for i in $(seq 1 30); do [[ "$(lpstat | wc -l)" == '0' ]] && break;
        echo "waiting for print queue ..."
        sleep 2;
    done
    while grep 'open' "$lid_file" &> /dev/null; do
        echo "waiting for lid to close ..."
        sleep 2;
    done
    sudo pm-suspend
    grep 'closed' "$lid_file" && hw_mem
    return 0
}

hw_hib() {
    sudo pm-hibernate
}

# screen brightness
# -----------------

hw_brightness() {
    screen_dir='/sys/class/backlight/intel_backlight'
    brightness_file="$screen_dir"'/brightness'
    max_bright="$(cat "$screen_dir"'/max_brightness')"
    curr_bright="$(cat "$brightness_file")"
    if [[ -n "$1" ]]
    then
        sudo zsh -c "echo $(($1 * $max_bright / 100)) > $brightness_file"
    else
        echo "$((100 * $curr_bright / $max_bright))%"
    fi
}

# screen resolution
# -----------------

hw_xrandr() {
    xrandr_mode="$1" ; shift
    case "$xrandr_mode" in
        home)   xrandr --output eDP1 --off            --output HDMI1 --mode 1920x1080 ;;
        laptop) xrandr --output eDP1 --mode 1920x1080                                 ;;
        work)   xrandr --output eDP1 --off            --output HDMI1 --mode 3840x2160 ;;
        *)      echo "Unknown xrandr mode: '$xrandr_mode'"                            ;;
    esac
}

# screen redshift
# ---------------

hw_redshift() {
    temperature='4800'
    [[ -n "$1" ]] && temperature="$1" && shift
    case "$temperature" in
        day)   temperature='4800' ;;
        night) temperature='2200' ;;
    esac
    export DISPLAY=:$display; redshift -O $temperature
}


# Main functionality
hw_command="$1"
shift
case "$hw_command" in
    bat)           hw_bat $@                                  ;;
    temp)          hw_temp $@                                 ;;
    mem)           hw_mem $@                                  ;;
    br|brightness) hw_brightness "$@"                         ;;
    rs|redshift)   hw_redshift   "$@"                         ;;
    mon|monitor)   hw_xrandr     "$@"                         ;;
    *)             echo "Unrecognized command: '$hw_command'" ;;
esac
