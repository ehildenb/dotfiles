#!/usr/bin/env zsh

source "$DOTFILES/zsh/aliases"
old_md5=""
new_md5=""
time_between='2'

monitor_type="$1" && shift

timestamp() { date +'%F %H:%M:%S'          ; }
recho()     { echo '\033[0;31m'$@'\033[0m' ; }
becho()     { echo '\033[0;34m'$@'\033[0m' ; }

case "$monitor_type" in
    poll)
        time_between="$1" && shift
        diff_command=("date")
        ;;
    git)
        diff_command=("git" "diff")
        ;;
    git-path)
        git_path="$1" && shift
        diff_command=("git" "diff" "--" "$git_path")
        ;;
    file)
        filename="$1" && shift
        if [[ ! -f "$filename" ]]; then
             recho "No file: $filename"
             exit 1
        fi
        diff_command=("cat" "$filename")
        ;;
    files)
        diff_command=("cat")
        while [[ "$1" != '--' ]]; do
            filename="$1" && shift
            if [[ ! -f "$filename" ]]; then
                 recho "No file: $filename"
                 exit 1
            fi
            diff_command+=("$filename")
        done
        shift
        ;;
    *)
        recho "Unknown 'monitor_type': $monitor_type"
        exit 1
        ;;
esac

run() {
    new_md5="$($diff_command | md5sum)"
    if [[ "$old_md5" != "$new_md5" ]]; then
        old_md5="$new_md5"
        becho "Executing $(timestamp): $@"
        eval "$@"
        if [[ "$?" == '0' ]]; then
            becho "READY $(timestamp): $@"
        else
            recho "READY $(timestamp): $@"
        fi
        while read -t 0; do :; done
    fi
}

while true; do
    run $@
    read -s -k 1 -t "$time_between" input
    case "$input" in
        r)
            old_md5=""
            ;;
    esac
    read -s -t 0
    input=""
done
