#!/usr/bin/env zsh

# pull in aliases
source "$DOTFILES/zsh/aliases"

# status commands
# ===============

# date/time
get_date() {
    echo "$(date +'%a, %d %b %Y - %H:%M')"
}

# uptime
get_uptime() {
    uptime_output=""
    while read amount; do
        read unit
        uptime_output="$uptime_output $amount${unit[1]}"
    done < <(uptime -p | tr ' ' '\n' | tail -n+2)
    echo "$uptime_output"
}

# screen brightness
get_bright() {
    bright="$(hw brightness)"
    bat_state="${$(hw bat):0:1}"
    case "$bat_state" in
        F|C)
            return 0
            ;;
        *)
            [[ "${bright:0:(-1)}" -gt "80" ]] \
                && echo "$bright"
            ;;
    esac
}

# new emails
get_email() {
    num_email="$(mukk list tag:inbox | wc -l)"
    [[ "$num_email" != "0" ]] && echo "$num_email"
    return 0
}


# TS_STAT_TYPE is 'status' or 'notifications'
separator="  |"
stat_command="$1"
case "$stat_command" in
    s|status)
        output=""
        output="$output $(get_date)$separator"
        output="$output Temps: $(hw temp | tr '\n' ' ')$separator"
        output="$output Net: $(net print | head -c10) - $(net list)$separator"
        output="$output Uptime: $(get_uptime)"
        ;;

    n|notifs)
        bright="$(get_bright)"
        email="$(get_email)"
        output=""
        [[ -n "$bright" ]] && output="Brightness: $bright$separator"
        [[ -n "$email" ]]  && output="$output Email: $email$separator"
        output="$output Bat: $(hw bat)$separator"
        [[ -n "$output" ]] && output="$output "
        ;;

    *)
        echo "Unkown 'tmux_status' command: $stat_command"
        exit 1
        ;;
esac

echo "$output"
